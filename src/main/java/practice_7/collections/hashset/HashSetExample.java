package practice_7.collections.hashset;

import java.util.*;

public class HashSetExample {
    public static void main(String[] args) {
        // 1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ HashSet
        HashSet<String> set = new HashSet<>();
        System.out.println("–°–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π HashSet: " + set);

        // 2Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        set.add("A");
        set.add("B");
        set.add("C");
        set.add("A"); // –î—É–±–ª–∏–∫–∞—Ç, –Ω–µ –¥–æ–±–∞–≤–∏—Ç—Å—è
        System.out.println("–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π: " + set); // [A, B, C] (–ø–æ—Ä—è–¥–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º)

        // 3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
        System.out.println("–°–æ–¥–µ—Ä–∂–∏—Ç 'A'? " + set.contains("A")); // true
        System.out.println("–°–æ–¥–µ—Ä–∂–∏—Ç 'X'? " + set.contains("X")); // false

        // 4Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        set.remove("B");
        System.out.println("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è 'B': " + set); // [A, C]

        // 5Ô∏è‚É£ –ò—Ç–µ—Ä–∞—Ü–∏—è –ø–æ HashSet (for-each)
        System.out.print("–ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ");
        for (String item : set) {
            System.out.print(item + " ");
        }
        System.out.println();

        // 6Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Iterator
        Iterator<String> iterator = set.iterator();
        System.out.print("Iterator: ");
        while (iterator.hasNext()) {
            System.out.print(iterator.next() + " ");
        }
        System.out.println();

        // 7Ô∏è‚É£ –•—Ä–∞–Ω–µ–Ω–∏–µ null
        set.add(null);
        System.out.println("–î–æ–±–∞–≤–∏–ª–∏ null: " + set); // [null, A, C]

        // 8Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å LinkedHashSet (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫)
        LinkedHashSet<Integer> linkedSet = new LinkedHashSet<>();
        linkedSet.add(3);
        linkedSet.add(1);
        linkedSet.add(2);
        System.out.println("LinkedHashSet (—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫): " + linkedSet); // [3, 1, 2]

        // 9Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å TreeSet (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
        TreeSet<Integer> treeSet = new TreeSet<>(linkedSet);
        System.out.println("TreeSet (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π): " + treeSet); // [1, 2, 3]

        // üîü –°—Ä–∞–≤–Ω–µ–Ω–∏–µ HashSet vs TreeSet
        HashSet<Integer> hashSet = new HashSet<>();
        TreeSet<Integer> treeSet2 = new TreeSet<>();

        long start, end;

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ HashSet
        start = System.nanoTime();
        for (int i = 0; i < 10000; i++) {
            hashSet.add(i);
        }
        end = System.nanoTime();
        System.out.println("HashSet: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ 10k —ç–ª–µ–º–µ–Ω—Ç–æ–≤ = " + (end - start) / 1_000_000 + " –º—Å");

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ TreeSet
        start = System.nanoTime();
        for (int i = 0; i < 10000; i++) {
            treeSet2.add(i);
        }
        end = System.nanoTime();
        System.out.println("TreeSet: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ 10k —ç–ª–µ–º–µ–Ω—Ç–æ–≤ = " + (end - start) / 1_000_000 + " –º—Å");
    }
}
